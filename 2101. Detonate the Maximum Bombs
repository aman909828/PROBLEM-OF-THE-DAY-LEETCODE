class Solution:
    def maximumDetonation(self, bombs: List[List[int]]) -> int:
        n=len(bombs)
        adj=[[0 for i in range(n)]for j in range(n)]

        for i in range(n):
            p,q,r=bombs[i][0],bombs[i][1],bombs[i][2]
            for j in range(n):
                x,y,z=bombs[j][0],bombs[j][1],bombs[j][2]
                dist=((x-p)**2)+((y-q)**2)
                dist=sqrt(dist)
                if i==j:
                    adj[i][j]=0
                elif dist<=r:
                    adj[i][j]=1
                elif dist>r:
                    adj[i][j]=0
    
        def dfs(node):
            for i in range(n):
                if adj[node][i]==1 and vis[i]==0:
                    self.cnt+=1
                    vis[i]=1
                    dfs(i)
            
        ans=1
        for i in range(n):
            vis=[0 for i in range(n)]
            self.cnt=1
            vis[i]=1
            dfs(i)
            ans=max(ans,self.cnt)
        return ans
