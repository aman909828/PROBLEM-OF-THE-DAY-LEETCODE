class Solution:
    def profitableSchemes(self, n: int, minProfit: int, group: List[int], profit: List[int]) -> int:
        dp=[[0]*(n+1) for i in range(minProfit+1)]
        dp[0][0]=1
        res=0
        mod=10**9+7
        for k in range(len(group)):
            g=group[k]
            p=profit[k]
            for i in range(minProfit,-1,-1):
                for j in range(n-g,-1,-1):
                    dp[min(i+p,minProfit)][j+g]=(dp[min(i+p,minProfit)][j+g]+dp[i][j])%mod
            
        for x in dp[minProfit]:
            res=(res+x)%mod
        return res
