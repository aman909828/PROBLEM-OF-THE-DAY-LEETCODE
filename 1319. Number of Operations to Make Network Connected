class Solution:
    def bfs(self,x,adj,vis):
        q=[x]
        vis[x]=1
        while q:
            node=q.pop(0)
            for i in adj[node]:
                if vis[i]==0:
                    vis[i]=1
                    q.append(i)

    def makeConnected(self, n: int, connections: List[List[int]]) -> int:
        adj=defaultdict(list)
        for i in connections:
            adj[i[0]].append(i[1])
            adj[i[1]].append(i[0])
        vis=[0 for i in range(n)]
        edges=len(connections)
        if edges<n-1:
            return -1
        isolated_islands=0

        for i in range(n):
            if vis[i]==0:
                self.bfs(i,adj,vis)
                isolated_islands+=1
        return isolated_islands-1
        
