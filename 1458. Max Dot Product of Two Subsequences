class Solution:
    def maxDotProduct(self, nums1: List[int], nums2: List[int]) -> int:
        n,m=len(nums1),len(nums2)
        dp=[[-1 for i in range(m)]for j in range(n)]

        def solve(ind1,ind2):
            if ind1==n or ind2==m:
                return 0
            
            if dp[ind1][ind2]!=-1:
                return dp[ind1][ind2]
            
            take=nums1[ind1]*nums2[ind2] +solve(ind1+1,ind2+1)
            skip1=solve(ind1+1,ind2)
            skip2=solve(ind1,ind2+1)

            dp[ind1][ind2]=max(take,skip1,skip2)
            return dp[ind1][ind2]
        
        mx1,mx2,mn1,mn2=max(nums1),max(nums2),min(nums1),min(nums2)

        if (mx1<0 and mn2>0) or (mn1>0 or mx2<0):
            return max(mx1*mn2,mn1*mx2)
        
        return solve(0,0)
        
