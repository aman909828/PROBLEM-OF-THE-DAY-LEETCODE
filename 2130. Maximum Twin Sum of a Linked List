# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def pairSum(self, head: Optional[ListNode]) -> int:
        curr=head
        head2=None
        slow=fast=head
        while fast and fast:
            curr=slow
            slow=slow.next
            fast=fast.next.next
        curr.next=None

        head2=slow
        prev=head2
        curr=prev.next
        if curr==None:
            return head.val+head2.val
        prev.next=None
        nxt=None
        if curr.next:
            nxt=curr.next
        while nxt:
            curr.next=prev
            prev=curr
            curr=nxt
            nxt=nxt.next
        curr.next=prev
        head2=curr
        p1,p2=head,head2
        ans=-1
        while p1:
            x=p1.val+p2.val
            ans=max(ans,x)
            p1=p1.next
            p2=p2.next
        return ans
