# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def distanceK(self, root: TreeNode, target: TreeNode, k: int) -> List[int]:
        adj=defaultdict(list)
        def connect(parent,child):
            if parent and child:
                adj[parent.val].append(child.val)
                adj[child.val].append(parent.val)
            if child.left:
                connect(child,child.left)
            if child.right:
                connect(child,child.right)
        
        connect(None,root)
        q=[target.val]
        s=set(q)
        for i in range(k):
            arr=[]
            for j in q:
                for k in adj[j]:
                    if k not in s:
                        arr.append(k)

            q=arr
            s|=set(q)
        return q
