class Solution:
    def countPaths(self, grid: List[List[int]]) -> int:
        mod=int(1e9)+7
        n,m=len(grid),len(grid[0])
        row=[-1 for i in range(m)]
        vis=[row[:] for i in range(n)]

        def dfs(i,j):
            if vis[i][j]!=-1:
                return vis[i][j]
            res=1
            adj=[(i+1,j),(i,j+1),(i-1,j),(i,j-1)]
            for a,b in adj:
                if 0<=a<n and 0<=b<m:
                    if grid[a][b]>grid[i][j]:
                        res=(res+dfs(a,b))%mod
            vis[i][j]=res
            return res
        
        res=0
        for i in range(n):
            for j in range(m):
                if vis[i][j]== -1:
                    vis[i][j]=dfs(i,j)
                res=(res+vis[i][j])%mod
        return res
