class Solution:
    def numOfWays(self, nums: List[int]) -> int:
        mod=int(1e9)+7
        def dfs(nums):
            n=len(nums)
            if n<3:
                return 1
            root,left,right=nums[0],[],[]
            for i in nums:
                if i<root:
                    left.append(i)
                elif i>root:
                    right.append(i)
            return dfs(left) * dfs(right) *comb(n-1,len(left))
        return (dfs(nums)-1)%mod
