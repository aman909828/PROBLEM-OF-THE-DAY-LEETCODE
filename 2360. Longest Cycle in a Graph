class Solution:
    def longestCycle(self, edges: List[int]) -> int:
        n=len(edges)
        vis=[0 for i in range(n)]
        length=[-1 for i in range(n)]
        self.ans=-1

        def dfs(node,curr_len):
            if vis[node]==0:
                vis[node]=1
                length[node]=curr_len
                if edges[node]!=-1:
                    dfs(edges[node],curr_len+1)
            
                length[node]=-1
            else:
                if length[node]!=-1:
                    self.ans=max(self.ans,curr_len-length[node])

        
        for i in range(n):
            if vis[i]==0:
                dfs(i,0)
        return self.ans

        
